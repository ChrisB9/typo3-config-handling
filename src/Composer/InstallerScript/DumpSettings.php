<?php
declare(strict_types=1);
namespace Helhum\TYPO3\ConfigHandling\Composer\InstallerScript;

/***************************************************************
 *  Copyright notice
 *
 *  (c) 2017 Helmut Hummel <info@helhum.io>
 *  All rights reserved
 *
 *  The GNU General Public License can be found at
 *  http://www.gnu.org/copyleft/gpl.html.
 *  A copy is found in the text file GPL.txt and important notices to the license
 *  from the author is found in LICENSE.txt distributed with these scripts.
 *
 *
 *  This script is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  This copyright notice MUST APPEAR in all copies of the script!
 ***************************************************************/

use Composer\Script\Event as ScriptEvent;
use Composer\Util\Filesystem;
use Helhum\Typo3Console\Mvc\Cli\CommandDispatcher;
use Helhum\Typo3Console\Mvc\Cli\FailedSubProcessCommandException;
use TYPO3\CMS\Composer\Plugin\Core\InstallerScript;

class DumpSettings implements InstallerScript
{
    public function run(ScriptEvent $event): bool
    {
        $io = $event->getIO();
        if (
            !$this->allowGeneration(getenv('TYPO3_PATH_ROOT') . '/typo3conf/LocalConfiguration.php')
            || !$this->allowGeneration(getenv('TYPO3_PATH_ROOT') . '/typo3conf/AdditionalConfiguration.php')
        ) {
            $io->writeError(
                '<warning>Skipped dumping configuration because custom LocalConfiguration.php or AdditionalConfiguration.php files are present.</warning>'
            );

            return true;
        }

        $io->writeError(
            '<info>TYPO3: Dumping global settings to AdditionalConfiguration.php</info>'
        );
        $arguments = [];
        if (!$event->isDevMode()) {
            $arguments[] = '--no-dev';
        }
        $filesystem = new Filesystem();
        $filesystem->ensureDirectoryExists(getenv('TYPO3_PATH_ROOT') . '/typo3conf/');
        $filesystem->ensureDirectoryExists(getenv('TYPO3_PATH_ROOT') . '/typo3temp/');
        $commandDispatcher = CommandDispatcher::createFromComposerRun($event);
        try {
            $commandDispatcher->executeCommand('settings:dump', $arguments);
        } catch (FailedSubProcessCommandException $e) {
            $io->writeError(sprintf('<error>Dumping TYPO3 settings failed.%sOutput: "%s", ErrorOutput: "%s"</error>', PHP_EOL, $e->getOutputMessage(), $e->getErrorMessage()));
        }

        return true;
    }

    private function allowGeneration(string $file): bool
    {
        if (!file_exists($file)) {
            return true;
        }

        return strpos(file_get_contents($file), 'Auto generated by helhum/typo3-config-handling') !== false;
    }
}
